description: Scan the application dependencies for known vulnerabilities with Snyk. This command calls the others, and should be used as the command for scanning.
parameters:
  token-variable:
    description: >
      Name of env var containing your Snyk API token. Pass this as a raw string such as CICD_SNYK_TOKEN.
      Do not paste the actual token into your configuration.
      If omitted it's assumed the CLI has already been setup with a valid token beforehand.
    type: env_var_name
    default: SNYK_TOKEN
  severity-threshold:
    description: Only report vulnerabilities of provided level or higher (low/medium/high). Default is low.
    type: enum
    enum: ["low", "medium", "high"]
    default: "low"
  protect:
    description: Protect the app by applying patches specified in your .snyk file (after running the Snyk wizard)
    type: boolean
    default: false  
  fail-on-issues:
    description: This specifies if builds should be failed or continued based on issues found by Snyk.
    type: boolean
    default: true
  monitor-on-build:
    description: Take a current application dependencies snapshot for continuous monitoring by Snyk, if test was succesful.
    type: boolean
    default: true
  target-file:
    description: The path to the manifest file to be used by Snyk. Should be provided if non-standard.
    type: string
    default: ""
  docker-image-name:
    description: The image name, if scanning a container image
    type: string
    default: ""
  organization: 
    description: >
      Name of the Snyk organisation name, under which this project should be tested and monitored
      If omitted the default organization will be used.
    type: string
    default: ""
  project:
    description: >
      A custom name for the Snyk project to be created on snyk.io.
      If omitted a default-generated project name will be used.
    type: string
    default: ""
  additional-arguments:
    description: Refer to the Snyk CLI help page for information on additional arguments.
    type: string
    default: ""
  os:
    description: The CLI OS version to download
    type: enum
    enum: ["linux", "macos"]
    default: "linux"
steps:
  # install snyk
  - run: 
      name: Download Snyk CLI
      command: |
        if [[ ! -x "/usr/local/bin/snyk" ]]; then
          curl -s https://api.github.com/repos/snyk/snyk/releases/latest | grep "browser_download_url" | grep <<parameters.os>> | cut -d '"' -f 4 | wget -qi -
          sha256sum -c snyk-<<parameters.os>>.sha256
          sudo mv snyk-<<parameters.os>> /usr/local/bin/snyk
          sudo chmod +x /usr/local/bin/snyk
        fi
        snyk config set disableSuggestions=true
        <<#parameters.token-variable>>snyk auth $<<parameters.token-variable>><</parameters.token-variable>>
  # snyk protect
  - when:
      condition: <<parameters.protect>>
      steps:
        - run:
            name: "Run Snyk protect to apply patches from .snyk file"
            command: |
              snyk protect <<parameters.additional-arguments>>
  # snyk test
  - run:
      name: "Run Snyk test to scan app for vulnerabilities"
      command: >
        snyk test 
        <<#parameters.docker-image-name>>--docker <<parameters.docker-image-name>><</parameters.docker-image-name>>
        <<#parameters.severity-threshold>>--severity-threshold=<<parameters.severity-threshold>><</parameters.severity-threshold>>
        <<#parameters.organization>>--org=<<parameters.organization>><</parameters.organization>>
        <<#parameters.target-file>>--file=<<parameters.target-file>><</parameters.target-file>>
        <<parameters.additional-arguments>>
        <<^parameters.fail-on-issues>> || true<</parameters.fail-on-issues>>
  # snyk monitor
  - when:
      condition: <<parameters.monitor-on-build>>
      steps:
        - run:
            name: "Run Snyk monitor for continuous monitoring on snyk.io"
            command: >
              snyk monitor 
              <<#parameters.docker-image-name>>--docker <<parameters.docker-image-name>><</parameters.docker-image-name>>
              <<#parameters.project>>--project-name=<<parameters.project>><</parameters.project>>
              <<#parameters.organization>>--org=<<parameters.organization>><</parameters.organization>>
              <<#parameters.target-file>>--file=<<parameters.target-file>><</parameters.target-file>>
              <<parameters.additional-arguments>>
